import React from 'react';
import '../App.css'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∏–ª–∏

export const CHEST_VALUES = {
  1: 35,
  2: 50,
  3: 70,
  4: 100
};

interface GameBoard2Props {
  onChestSelect: (chestIndex: number) => void;
  loading: boolean;
  gameActive: boolean;
  selectedChest: number | null;
  playersMadeChoice: Record<string, boolean>;
  activePlayer: 'You' | '–ò–≥—Ä–æ–∫2';
  timeLeft: number;
  resultsReady: boolean;
}

const GameBoard2: React.FC<GameBoard2Props> = ({ 
  onChestSelect, 
  loading, 
  gameActive,
  selectedChest,
  playersMadeChoice,
  activePlayer,
  timeLeft,
  resultsReady
}) => {
  const handleChestClick = (chestNumber: number) => {
    if (!loading && gameActive) {
      onChestSelect(chestNumber);
    }
  };

  const isButtonDisabled = (chestNumber: number): boolean => {
    // –ö–Ω–æ–ø–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ –µ—Å–ª–∏:
    // 1. –ò–≥—Ä–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞
    // 2. –ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞
    // 3. –¢–µ–∫—É—â–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π –∏–≥—Ä–æ–∫ —É–∂–µ —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä
    return !gameActive || loading || playersMadeChoice[activePlayer];
  };

  return (
    <div className="text-center relative z-10">
      <div className="flex flex-col items-center justify-center gap-2 mb-6">
        <h2 className="text-2xl font-bold text-black">–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–Ω–¥—É–∫</h2>
        <div className="flex items-center gap-2">
          <span className={`px-3 py-1 rounded-full ${activePlayer === 'You' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}>
            –ò–≥—Ä–æ–∫ 1 (–í—ã)
          </span>
          <span className={`px-3 py-1 rounded-full ${activePlayer === '–ò–≥—Ä–æ–∫2' ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}>
            –ò–≥—Ä–æ–∫ 2
          </span>
        </div>
        <div className="flex items-center justify-center my-2">
          <span className="text-lg font-bold text-purple-600">
            –•–æ–¥: {activePlayer === 'You' ? '–í—ã' : '–ò–≥—Ä–æ–∫ 2'} 
            <span className="ml-2 text-blue-600">‚è±Ô∏è {timeLeft}—Å</span>
          </span>
        </div>
      </div>
      <div className="grid grid-cols-4 gap-4 justify-center chests-container">
        {[1, 2, 3, 4].map((chestNumber) => (
          <button
            key={chestNumber}
            onClick={() => handleChestClick(chestNumber)}
            disabled={isButtonDisabled(chestNumber)}
            className={`
              relative z-20
              p-4 border-4 border-yellow-500 bg-yellow-300 
              text-yellow-900 font-bold text-lg rounded-xl 
              shadow-lg transition-all duration-300 transform 
              ${selectedChest === chestNumber ? 'chest-selected' : ''}
              ${selectedChest !== null && selectedChest !== chestNumber ? 'chest-not-selected' : ''}
              ${isButtonDisabled(chestNumber) ? 'opacity-50 cursor-not-allowed' : 'hover:scale-105'}
            `}
            id={`chest-${chestNumber}`}
          >
            üí∞ {CHEST_VALUES[chestNumber]} Gold
          </button>
        ))}
      </div>
      {loading && <p className="mt-4 text-gray-300">–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—É–Ω–¥—É–∫...</p>}
      {activePlayer === 'You' && playersMadeChoice['You'] && (
        <p className="mt-4 text-green-600 font-bold">–í—ã —Å–¥–µ–ª–∞–ª–∏ –≤—ã–±–æ—Ä. –•–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –ò–≥—Ä–æ–∫—É 2.</p>
      )}
      {activePlayer === '–ò–≥—Ä–æ–∫2' && playersMadeChoice['–ò–≥—Ä–æ–∫2'] && (
        <p className="mt-4 text-green-600 font-bold">–ò–≥—Ä–æ–∫ 2 —Å–¥–µ–ª–∞–ª –≤—ã–±–æ—Ä. –†–∞—É–Ω–¥ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è...</p>
      )}
    </div>
  );
};

export default GameBoard2;